{"ast":null,"code":"import _classCallCheck from \"/home/omeyer/Desktop/socialTech/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/omeyer/Desktop/socialTech/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/omeyer/Desktop/socialTech/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/omeyer/Desktop/socialTech/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/omeyer/Desktop/socialTech/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/omeyer/Desktop/socialTech/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/omeyer/Desktop/socialTech/client/src/components/content/formInputs/LoginButton.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Button } from \"@material-ui/core\";\nimport validator from \"validator\";\nvar styles = {\n  loginButton: {\n    marginTop: \"20px\"\n  }\n};\n\nvar LoginButton =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LoginButton, _Component);\n\n  function LoginButton(props) {\n    var _this;\n\n    _classCallCheck(this, LoginButton);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LoginButton).call(this, props));\n\n    _this.handleClickOpen = function () {\n      if (_this.validateUser() === true) {\n        _this.setState({\n          openDialog: true\n        });\n      }\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        openDialog: false\n      });\n    };\n\n    _this.state = {\n      openDialog: false\n    };\n    _this.validateUser = _this.validateUser.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.clearValidationErrors = _this.clearValidationErrors.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.validateUser = _this.validateUser.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(LoginButton, [{\n    key: \"clearValidationErrors\",\n    value: function clearValidationErrors(element) {\n      var newArr = [];\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.props.prevState.errors[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var error = _step.value;\n\n          if (element !== error.element) {\n            newArr.push(error);\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return {\n        errors: newArr\n      };\n    }\n  }, {\n    key: \"validateUser\",\n    value: function validateUser() {\n      var username = this.props.parentState.username;\n      var email = this.props.parentState.email;\n      var password = this.props.parentState.password;\n      var registrationValid = true;\n\n      if (username === \"\") {\n        this.props.onSubmit(\"username\", \"Username cannot be empty!\");\n        registrationValid = false;\n      }\n\n      if (email === \"\") {\n        this.props.onSubmit(\"email\", \"Email cannot be empty!\");\n        registrationValid = false;\n      } else if (validator.isEmail(email) === false) {\n        this.props.onSubmit(\"email\", \"Invalid email format!\");\n        registrationValid = false;\n      }\n\n      if (password === \"\") {\n        this.props.onSubmit(\"password\", \"Password cannot be empty!\");\n        registrationValid = false;\n      }\n\n      return registrationValid;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var classes = this.classes.classes;\n      return React.createElement(Button, {\n        className: classes.loginButton,\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        onClick: this.handleClickOpen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Login\");\n    }\n  }]);\n\n  return LoginButton;\n}(Component);\n\nLoginButton.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(LoginButton);","map":{"version":3,"sources":["/home/omeyer/Desktop/socialTech/client/src/components/content/formInputs/LoginButton.js"],"names":["React","Component","PropTypes","withStyles","Button","validator","styles","loginButton","marginTop","LoginButton","props","handleClickOpen","validateUser","setState","openDialog","handleClose","state","bind","clearValidationErrors","element","newArr","prevState","errors","error","push","username","parentState","email","password","registrationValid","onSubmit","isEmail","classes","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Button } from \"@material-ui/core\";\nimport validator from \"validator\";\n\nconst styles = {\n  loginButton: {\n    marginTop: \"20px\"\n  }\n};\n\nclass LoginButton extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      openDialog: false\n    };\n    this.validateUser = this.validateUser.bind(this);\n    this.clearValidationErrors = this.clearValidationErrors.bind(this);\n    this.validateUser = this.validateUser.bind(this);\n  }\n\n  handleClickOpen = () => {\n    if (this.validateUser() === true) {\n      this.setState({ openDialog: true });\n    }\n  };\n\n  handleClose = () => {\n    this.setState({ openDialog: false });\n  };\n\n  clearValidationErrors(element) {\n    let newArr = [];\n    for (let error of this.props.prevState.errors) {\n      if (element !== error.element) {\n        newArr.push(error);\n      }\n    }\n    return { errors: newArr };\n  }\n\n  validateUser() {\n    const username = this.props.parentState.username;\n    const email = this.props.parentState.email;\n    const password = this.props.parentState.password;\n\n    let registrationValid = true;\n    if (username === \"\") {\n      this.props.onSubmit(\"username\", \"Username cannot be empty!\");\n      registrationValid = false;\n    }\n    if (email === \"\") {\n      this.props.onSubmit(\"email\", \"Email cannot be empty!\");\n      registrationValid = false;\n    } else if (validator.isEmail(email) === false) {\n      this.props.onSubmit(\"email\", \"Invalid email format!\");\n      registrationValid = false;\n    }\n\n    if (password === \"\") {\n      this.props.onSubmit(\"password\", \"Password cannot be empty!\");\n      registrationValid = false;\n    }\n\n    return registrationValid;\n  }\n\n  render() {\n    const { classes } = this.classes;\n    return (\n      <Button\n        className={classes.loginButton}\n        variant=\"contained\"\n        color=\"primary\"\n        type=\"submit\"\n        onClick={this.handleClickOpen}\n      >\n        Login\n      </Button>\n    );\n  }\n}\n\nLoginButton.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(LoginButton);\n"]},"metadata":{},"sourceType":"module"}