{"ast":null,"code":"import _classCallCheck from \"/goinfre/omeyer/Desktop/socialTech/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/goinfre/omeyer/Desktop/socialTech/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/goinfre/omeyer/Desktop/socialTech/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/goinfre/omeyer/Desktop/socialTech/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/goinfre/omeyer/Desktop/socialTech/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/goinfre/omeyer/Desktop/socialTech/client/src/components/content/dialogs/NewUser.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from \"@material-ui/core\";\n\nvar NewUser =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NewUser, _Component);\n\n  function NewUser() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, NewUser);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(NewUser)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      open: false\n    };\n\n    _this.handleClickOpen = function () {\n      _this.setState({\n        open: true\n      });\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        open: false\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(NewUser, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: this.handleClickOpen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"Register\"), React.createElement(Dialog, {\n        open: this.state.open,\n        onClose: this.handleClose,\n        \"aria-labelledby\": \"alert-dialog-title\",\n        \"aria-describedby\": \"alert-dialog-description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        id: \"alert-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Use Google's location service?\"), React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(DialogContentText, {\n        id: \"alert-dialog-description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.\")), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.handleClose,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Disagree\"), React.createElement(Button, {\n        onClick: this.handleClose,\n        color: \"primary\",\n        autoFocus: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Agree\"))));\n    }\n  }]);\n\n  return NewUser;\n}(Component);\n\nexport default NewUser;\n/**<Fragment>\n                <Button onClick={this.handleClickOpen}>Register</Button>\n        <Dialog\n          open={this.state.open}\n          onClose={this.handleClose}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">\n            {\"Use Google's location service?\"}\n          </DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              Let Google help apps determine location. This means sending\n              anonymous location data to Google, even when no apps are running.\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose} color=\"primary\">\n              Disagree\n            </Button>\n            <Button onClick={this.handleClose} color=\"primary\" autoFocus>\n              Agree\n            </Button>\n          </DialogActions>\n        </Dialog>\n        </Fragment> */","map":{"version":3,"sources":["/goinfre/omeyer/Desktop/socialTech/client/src/components/content/dialogs/NewUser.js"],"names":["React","Component","Fragment","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","NewUser","state","open","handleClickOpen","setState","handleClose"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SACEC,MADF,EAEEC,MAFF,EAGEC,aAHF,EAIEC,aAJF,EAKEC,iBALF,EAMEC,WANF,QAOO,mBAPP;;IASMC,O;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,IAAI,EAAE;AADA,K;;UAIRC,e,GAAkB,YAAM;AACtB,YAAKC,QAAL,CAAc;AAAEF,QAAAA,IAAI,EAAE;AAAR,OAAd;AACD,K;;UAEDG,W,GAAc,YAAM;AAClB,YAAKD,QAAL,CAAc;AAAEF,QAAAA,IAAI,EAAE;AAAR,OAAd;AACD,K;;;;;;;6BAEQ;AACP,aACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AACE,QAAA,OAAO,EAAC,WADV;AAEE,QAAA,KAAK,EAAC,SAFR;AAGE,QAAA,OAAO,EAAE,KAAKC,eAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAQE,oBAAC,MAAD;AACE,QAAA,IAAI,EAAE,KAAKF,KAAL,CAAWC,IADnB;AAEE,QAAA,OAAO,EAAE,KAAKG,WAFhB;AAGE,2BAAgB,oBAHlB;AAIE,4BAAiB,0BAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAME,oBAAC,WAAD;AAAa,QAAA,EAAE,EAAC,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,gCADH,CANF,EASE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,iBAAD;AAAmB,QAAA,EAAE,EAAC,0BAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yIADF,CATF,EAeE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKA,WAAtB;AAAmC,QAAA,KAAK,EAAC,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAIE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKA,WAAtB;AAAmC,QAAA,KAAK,EAAC,SAAzC;AAAmD,QAAA,SAAS,MAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJF,CAfF,CARF,CADF;AAmCD;;;;EAjDmBb,S;;AAoDtB,eAAeQ,OAAf;AAEA","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle\n} from \"@material-ui/core\";\n\nclass NewUser extends Component {\n  state = {\n    open: false\n  };\n\n  handleClickOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.handleClickOpen}\n        >\n          Register\n        </Button>\n        <Dialog\n          open={this.state.open}\n          onClose={this.handleClose}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">\n            {\"Use Google's location service?\"}\n          </DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              Let Google help apps determine location. This means sending\n              anonymous location data to Google, even when no apps are running.\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose} color=\"primary\">\n              Disagree\n            </Button>\n            <Button onClick={this.handleClose} color=\"primary\" autoFocus>\n              Agree\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </Fragment>\n    );\n  }\n}\n\nexport default NewUser;\n\n/**<Fragment>\n                <Button onClick={this.handleClickOpen}>Register</Button>\n        <Dialog\n          open={this.state.open}\n          onClose={this.handleClose}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">\n            {\"Use Google's location service?\"}\n          </DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              Let Google help apps determine location. This means sending\n              anonymous location data to Google, even when no apps are running.\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose} color=\"primary\">\n              Disagree\n            </Button>\n            <Button onClick={this.handleClose} color=\"primary\" autoFocus>\n              Agree\n            </Button>\n          </DialogActions>\n        </Dialog>\n        </Fragment> */\n"]},"metadata":{},"sourceType":"module"}