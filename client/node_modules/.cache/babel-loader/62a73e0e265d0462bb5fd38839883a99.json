{"ast":null,"code":"import _defineProperty from \"/goinfre/omeyer/Desktop/socialTech/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/goinfre/omeyer/Desktop/socialTech/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/goinfre/omeyer/Desktop/socialTech/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/goinfre/omeyer/Desktop/socialTech/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/goinfre/omeyer/Desktop/socialTech/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/goinfre/omeyer/Desktop/socialTech/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/goinfre/omeyer/Desktop/socialTech/client/src/components/content/RightPane.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { Paper, Typography, Button, FormGroup } from \"@material-ui/core\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport NewUser from \"./dialogs/NewUser\"; //import SwitchLabel from \"./SwitchLabel\";\n\nvar RightPane =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(RightPane, _Component);\n\n  function RightPane(props) {\n    var _this;\n\n    _classCallCheck(this, RightPane);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RightPane).call(this, props));\n\n    _this.handleChange = function (name) {\n      return function (event) {\n        _this.setState(_defineProperty({}, name, event.target.checked));\n      };\n    };\n\n    _this.props = props;\n    _this.state = {\n      checkedA: false\n    };\n    return _this;\n  }\n\n  _createClass(RightPane, [{\n    key: \"toggleLabel\",\n    value: function toggleLabel() {\n      return this.state.checkedA === false ? \"User\" : \"Company\";\n    }\n  }, {\n    key: \"userType\",\n    value: function userType() {\n      return this.state.checkedA === false ? React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        margin: \"normal\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"Firstname\"), React.createElement(Input, {\n        id: \"username\",\n        autoFocus: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      })), React.createElement(FormControl, {\n        margin: \"normal\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Last Name\"), React.createElement(Input, {\n        id: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }))) : React.createElement(FormControl, {\n        margin: \"normal\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Company Name\"), React.createElement(Input, {\n        id: \"username\",\n        autoFocus: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Paper, {\n        style: this.props.style.Paper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(NewUser, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return RightPane;\n}(Component);\n\nexport default RightPane;\n/**<FormGroup>\n          <Typography component=\"h1\" variant=\"h5\">\n            Registration\n          </Typography>\n          <FormControlLabel\n            control={\n              <Switch\n                checked={this.state.checkedA}\n                onChange={this.handleChange(\"checkedA\")}\n                value=\"checkedB\"\n                color=\"primary\"\n              />\n            }\n            label={this.toggleLabel()}\n          />\n\n          {this.userType()}\n\n          <FormControl margin=\"normal\" required>\n            <InputLabel>Username</InputLabel>\n            <Input id=\"username\" />\n          </FormControl>\n          <FormControl margin=\"normal\" required>\n            <InputLabel htmlFor=\"email\">Email Address</InputLabel>\n            <Input id=\"email\" name=\"email\" autoComplete=\"email\" />\n          </FormControl>\n          <FormControl margin=\"normal\" required>\n            <InputLabel htmlFor=\"password\">Password</InputLabel>\n            <Input\n              name=\"password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n            />\n          </FormControl>\n          <NewUser />\n        </FormGroup> */\n\n/*export default ({ style }) => (\n  <Paper style={style.Paper}>\n    <Typography component=\"h1\" variant=\"h5\">\n      Registration\n    </Typography>\n\n    <form className={style.form}>\n      <FormControlLabel\n        control={<Switch checked={false} onChange={false} value={false} />}\n        label=\"Private User/ Company\"\n      />\n\n      <FormControl margin=\"normal\" required fullWidth>\n        <InputLabel>Username</InputLabel>\n        <Input id=\"username\" autoFocus />\n      </FormControl>\n\n      <FormControl margin=\"normal\" required fullWidth>\n        <InputLabel htmlFor=\"email\">Email Address</InputLabel>\n        <Input id=\"email\" name=\"email\" autoComplete=\"email\" autoFocus />\n      </FormControl>\n\n      <FormControl margin=\"normal\" required fullWidth>\n        <InputLabel htmlFor=\"password\">Password</InputLabel>\n        <Input\n          name=\"password\"\n          type=\"password\"\n          id=\"password\"\n          autoComplete=\"current-password\"\n        />\n      </FormControl>\n\n      <FormControlLabel\n        control={<Checkbox value=\"remember\" color=\"primary\" />}\n        label=\"Remember me\"\n      />\n      <Button\n        type=\"submit\"\n        fullWidth\n        variant=\"contained\"\n        color=\"primary\"\n        className={style.submit}\n      >\n        Register\n      </Button>\n    </form>\n  </Paper>\n);*/","map":{"version":3,"sources":["/goinfre/omeyer/Desktop/socialTech/client/src/components/content/RightPane.js"],"names":["React","Component","Fragment","Paper","Typography","Button","FormGroup","FormControl","FormControlLabel","Input","InputLabel","Switch","NewUser","RightPane","props","handleChange","name","event","setState","target","checked","state","checkedA","style"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,KAAT,EAAgBC,UAAhB,EAA4BC,MAA5B,EAAoCC,SAApC,QAAqD,mBAArD;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,OAAP,MAAoB,mBAApB,C,CAEA;;IAEMC,S;;;;;AACJ,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,mFAAMA,KAAN;;AADiB,UAQnBC,YARmB,GAQJ,UAAAC,IAAI;AAAA,aAAI,UAAAC,KAAK,EAAI;AAC9B,cAAKC,QAAL,qBAAiBF,IAAjB,EAAwBC,KAAK,CAACE,MAAN,CAAaC,OAArC;AACD,OAFkB;AAAA,KARA;;AAEjB,UAAKN,KAAL,GAAaA,KAAb;AACA,UAAKO,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE;AADC,KAAb;AAHiB;AAMlB;;;;kCAMa;AACZ,aAAO,KAAKD,KAAL,CAAWC,QAAX,KAAwB,KAAxB,GAAgC,MAAhC,GAAyC,SAAhD;AACD;;;+BAEU;AACT,aAAO,KAAKD,KAAL,CAAWC,QAAX,KAAwB,KAAxB,GACL,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,WAAD;AAAa,QAAA,MAAM,EAAC,QAApB;AAA6B,QAAA,QAAQ,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE,oBAAC,KAAD;AAAO,QAAA,EAAE,EAAC,UAAV;AAAqB,QAAA,SAAS,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,EAME,oBAAC,WAAD;AAAa,QAAA,MAAM,EAAC,QAApB;AAA6B,QAAA,QAAQ,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE,oBAAC,KAAD;AAAO,QAAA,EAAE,EAAC,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CANF,CADK,GAaL,oBAAC,WAAD;AAAa,QAAA,MAAM,EAAC,QAApB;AAA6B,QAAA,QAAQ,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE,oBAAC,KAAD;AAAO,QAAA,EAAE,EAAC,UAAV;AAAqB,QAAA,SAAS,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CAbF;AAkBD;;;6BAEQ;AACP,aACE,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAE,KAAKR,KAAL,CAAWS,KAAX,CAAiBpB,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAKD;;;;EA5CqBF,S;;AA+CxB,eAAeY,SAAf;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport { Paper, Typography, Button, FormGroup } from \"@material-ui/core\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport NewUser from \"./dialogs/NewUser\";\n\n//import SwitchLabel from \"./SwitchLabel\";\n\nclass RightPane extends Component {\n  constructor(props) {\n    super(props);\n    this.props = props;\n    this.state = {\n      checkedA: false\n    };\n  }\n\n  handleChange = name => event => {\n    this.setState({ [name]: event.target.checked });\n  };\n\n  toggleLabel() {\n    return this.state.checkedA === false ? \"User\" : \"Company\";\n  }\n\n  userType() {\n    return this.state.checkedA === false ? (\n      <Fragment>\n        <FormControl margin=\"normal\" required>\n          <InputLabel>Firstname</InputLabel>\n          <Input id=\"username\" autoFocus />\n        </FormControl>\n\n        <FormControl margin=\"normal\" required>\n          <InputLabel>Last Name</InputLabel>\n          <Input id=\"username\" />\n        </FormControl>\n      </Fragment>\n    ) : (\n      <FormControl margin=\"normal\" required>\n        <InputLabel>Company Name</InputLabel>\n        <Input id=\"username\" autoFocus />\n      </FormControl>\n    );\n  }\n\n  render() {\n    return (\n      <Paper style={this.props.style.Paper}>\n        <NewUser />\n      </Paper>\n    );\n  }\n}\n\nexport default RightPane;\n\n/**<FormGroup>\n          <Typography component=\"h1\" variant=\"h5\">\n            Registration\n          </Typography>\n          <FormControlLabel\n            control={\n              <Switch\n                checked={this.state.checkedA}\n                onChange={this.handleChange(\"checkedA\")}\n                value=\"checkedB\"\n                color=\"primary\"\n              />\n            }\n            label={this.toggleLabel()}\n          />\n\n          {this.userType()}\n\n          <FormControl margin=\"normal\" required>\n            <InputLabel>Username</InputLabel>\n            <Input id=\"username\" />\n          </FormControl>\n          <FormControl margin=\"normal\" required>\n            <InputLabel htmlFor=\"email\">Email Address</InputLabel>\n            <Input id=\"email\" name=\"email\" autoComplete=\"email\" />\n          </FormControl>\n          <FormControl margin=\"normal\" required>\n            <InputLabel htmlFor=\"password\">Password</InputLabel>\n            <Input\n              name=\"password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n            />\n          </FormControl>\n          <NewUser />\n        </FormGroup> */\n\n/*export default ({ style }) => (\n  <Paper style={style.Paper}>\n    <Typography component=\"h1\" variant=\"h5\">\n      Registration\n    </Typography>\n\n    <form className={style.form}>\n      <FormControlLabel\n        control={<Switch checked={false} onChange={false} value={false} />}\n        label=\"Private User/ Company\"\n      />\n\n      <FormControl margin=\"normal\" required fullWidth>\n        <InputLabel>Username</InputLabel>\n        <Input id=\"username\" autoFocus />\n      </FormControl>\n\n      <FormControl margin=\"normal\" required fullWidth>\n        <InputLabel htmlFor=\"email\">Email Address</InputLabel>\n        <Input id=\"email\" name=\"email\" autoComplete=\"email\" autoFocus />\n      </FormControl>\n\n      <FormControl margin=\"normal\" required fullWidth>\n        <InputLabel htmlFor=\"password\">Password</InputLabel>\n        <Input\n          name=\"password\"\n          type=\"password\"\n          id=\"password\"\n          autoComplete=\"current-password\"\n        />\n      </FormControl>\n\n      <FormControlLabel\n        control={<Checkbox value=\"remember\" color=\"primary\" />}\n        label=\"Remember me\"\n      />\n      <Button\n        type=\"submit\"\n        fullWidth\n        variant=\"contained\"\n        color=\"primary\"\n        className={style.submit}\n      >\n        Register\n      </Button>\n    </form>\n  </Paper>\n);*/\n"]},"metadata":{},"sourceType":"module"}