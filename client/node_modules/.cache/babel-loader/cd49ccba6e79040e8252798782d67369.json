{"ast":null,"code":"import _classCallCheck from \"/goinfre/omeyer/Desktop/socialTech/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/goinfre/omeyer/Desktop/socialTech/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/goinfre/omeyer/Desktop/socialTech/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/goinfre/omeyer/Desktop/socialTech/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/goinfre/omeyer/Desktop/socialTech/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/goinfre/omeyer/Desktop/socialTech/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/goinfre/omeyer/Desktop/socialTech/client/src/components/content/formInputs/Email.js\";\nimport React, { Component } from \"react\";\nimport { Input, InputLabel, FormControl, FormHelperText } from \"@material-ui/core\";\nimport validator from \"validator\";\n\nvar Email =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Email, _Component);\n\n  function Email(props) {\n    var _this;\n\n    _classCallCheck(this, Email);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Email).call(this, props));\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.sortErrors = _this.sortErrors.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Email, [{\n    key: \"onChange\",\n    value: function onChange(event) {\n      this.props.onEmailChange(event.target.value);\n      this.props.onClearErrorMsg(\"email\");\n    }\n  }, {\n    key: \"sortErrors\",\n    value: function sortErrors(errors, key) {\n      var newArr = [];\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = errors[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var error = _step.value;\n\n          if (key === error.element) {\n            newArr.push(error.message);\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return newArr;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var email = this.props.parentState.email;\n      var errors = this.props.parentState.errors;\n      return React.createElement(FormControl, {\n        margin: \"normal\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Email Address\"), React.createElement(Input, {\n        id: \"email\",\n        name: \"email\",\n        value: email,\n        onChange: this.onChange,\n        autoComplete: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }), React.createElement(FormHelperText, {\n        id: \"emailHelper\",\n        error: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, this.sortErrors(errors, \"email\")[0]));\n    }\n  }]);\n\n  return Email;\n}(Component);\n\nexport default Email;","map":{"version":3,"sources":["/goinfre/omeyer/Desktop/socialTech/client/src/components/content/formInputs/Email.js"],"names":["React","Component","Input","InputLabel","FormControl","FormHelperText","validator","Email","props","onChange","bind","sortErrors","event","onEmailChange","target","value","onClearErrorMsg","errors","key","newArr","error","element","push","message","email","parentState"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,KADF,EAEEC,UAFF,EAGEC,WAHF,EAIEC,cAJF,QAKO,mBALP;AAMA,OAAOC,SAAP,MAAsB,WAAtB;;IAEMC,K;;;;;AACJ,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,+EAAMA,KAAN;AACA,UAAKC,QAAL,GAAgB,MAAKA,QAAL,CAAcC,IAAd,uDAAhB;AACA,UAAKC,UAAL,GAAkB,MAAKA,UAAL,CAAgBD,IAAhB,uDAAlB;AAHiB;AAIlB;;;;6BAEQE,K,EAAO;AACd,WAAKJ,KAAL,CAAWK,aAAX,CAAyBD,KAAK,CAACE,MAAN,CAAaC,KAAtC;AACA,WAAKP,KAAL,CAAWQ,eAAX,CAA2B,OAA3B;AACD;;;+BAEUC,M,EAAQC,G,EAAK;AACtB,UAAIC,MAAM,GAAG,EAAb;AADsB;AAAA;AAAA;;AAAA;AAEtB,6BAAkBF,MAAlB,8HAA0B;AAAA,cAAjBG,KAAiB;;AACxB,cAAIF,GAAG,KAAKE,KAAK,CAACC,OAAlB,EAA2B;AACzBF,YAAAA,MAAM,CAACG,IAAP,CAAYF,KAAK,CAACG,OAAlB;AACD;AACF;AANqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAOtB,aAAOJ,MAAP;AACD;;;6BAEQ;AACP,UAAMK,KAAK,GAAG,KAAKhB,KAAL,CAAWiB,WAAX,CAAuBD,KAArC;AACA,UAAMP,MAAM,GAAG,KAAKT,KAAL,CAAWiB,WAAX,CAAuBR,MAAtC;AACA,aACE,oBAAC,WAAD;AAAa,QAAA,MAAM,EAAC,QAApB;AAA6B,QAAA,QAAQ,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAEE,oBAAC,KAAD;AACE,QAAA,EAAE,EAAC,OADL;AAEE,QAAA,IAAI,EAAC,OAFP;AAGE,QAAA,KAAK,EAAEO,KAHT;AAIE,QAAA,QAAQ,EAAE,KAAKf,QAJjB;AAKE,QAAA,YAAY,EAAC,OALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EASE,oBAAC,cAAD;AAAgB,QAAA,EAAE,EAAC,aAAnB;AAAiC,QAAA,KAAK,EAAE,IAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKE,UAAL,CAAgBM,MAAhB,EAAwB,OAAxB,EAAiC,CAAjC,CADH,CATF,CADF;AAeD;;;;EAxCiBhB,S;;AA0CpB,eAAeM,KAAf","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Input,\n  InputLabel,\n  FormControl,\n  FormHelperText\n} from \"@material-ui/core\";\nimport validator from \"validator\";\n\nclass Email extends Component {\n  constructor(props) {\n    super(props);\n    this.onChange = this.onChange.bind(this);\n    this.sortErrors = this.sortErrors.bind(this);\n  }\n\n  onChange(event) {\n    this.props.onEmailChange(event.target.value);\n    this.props.onClearErrorMsg(\"email\");\n  }\n\n  sortErrors(errors, key) {\n    let newArr = [];\n    for (let error of errors) {\n      if (key === error.element) {\n        newArr.push(error.message);\n      }\n    }\n    return newArr;\n  }\n\n  render() {\n    const email = this.props.parentState.email;\n    const errors = this.props.parentState.errors;\n    return (\n      <FormControl margin=\"normal\" required>\n        <InputLabel htmlFor=\"email\">Email Address</InputLabel>\n        <Input\n          id=\"email\"\n          name=\"email\"\n          value={email}\n          onChange={this.onChange}\n          autoComplete=\"email\"\n        />\n        <FormHelperText id=\"emailHelper\" error={true}>\n          {this.sortErrors(errors, \"email\")[0]}\n        </FormHelperText>\n      </FormControl>\n    );\n  }\n}\nexport default Email;\n"]},"metadata":{},"sourceType":"module"}