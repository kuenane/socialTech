{"ast":null,"code":"import _toConsumableArray from \"/goinfre/omeyer/Desktop/socialTech/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/goinfre/omeyer/Desktop/socialTech/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/goinfre/omeyer/Desktop/socialTech/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/goinfre/omeyer/Desktop/socialTech/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/goinfre/omeyer/Desktop/socialTech/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/goinfre/omeyer/Desktop/socialTech/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/goinfre/omeyer/Desktop/socialTech/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/goinfre/omeyer/Desktop/socialTech/client/src/components/content/formInputs/Username.js\";\nimport React, { Component } from \"react\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nvar Username =\n/*#__PURE__*/\nfunction (_Componentm) {\n  _inherits(Username, _Componentm);\n\n  function Username(props) {\n    var _this;\n\n    _classCallCheck(this, Username);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Username).call(this, props));\n    _this.state = {\n      errors: []\n    };\n    _this.showValidarionErrors = _this.showValidarionErrors.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.clearValidationErrors = _this.showValidarionErrors.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Username, [{\n    key: \"showValidarionErrors\",\n    value: function showValidarionErrors(element, message) {\n      this.setSate(function (prevState) {\n        return {\n          errors: _toConsumableArray(prevState.errors).concat([{\n            element: element,\n            message: message\n          }])\n        };\n      });\n    }\n  }, {\n    key: \"clearValidationErrors\",\n    value: function clearValidationErrors(message) {\n      this.setSate(function (prevState) {\n        var newArr = [];\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = prevState.errors[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            error = _step.value;\n\n            if (message != error.message) {\n              newArr.push(error);\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        return {\n          errors: newArr\n        };\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(FormControl, {\n        margin: \"normal\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"usertname\"), React.createElement(Input, {\n        id: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Username;\n}(Componentm);\n\nexport default Username;\n/*\nexport default props => (\n  <FormControl margin=\"normal\" required>\n    <InputLabel>usertname</InputLabel>\n    <Input id=\"username\" />\n  </FormControl>\n);*/","map":{"version":3,"sources":["/goinfre/omeyer/Desktop/socialTech/client/src/components/content/formInputs/Username.js"],"names":["React","Component","Input","InputLabel","FormControl","Username","props","state","errors","showValidarionErrors","bind","clearValidationErrors","element","message","setSate","prevState","newArr","error","push","Componentm"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;;IAEMC,Q;;;;;AACJ,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,kFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE;AADG,KAAb;AAGA,UAAKC,oBAAL,GAA4B,MAAKA,oBAAL,CAA0BC,IAA1B,uDAA5B;AACA,UAAKC,qBAAL,GAA6B,MAAKF,oBAAL,CAA0BC,IAA1B,uDAA7B;AANiB;AAOlB;;;;yCAEoBE,O,EAASC,O,EAAS;AACrC,WAAKC,OAAL,CAAa,UAAAC,SAAS;AAAA,eAAK;AACzBP,UAAAA,MAAM,qBAAMO,SAAS,CAACP,MAAhB,UAAwB;AAAEI,YAAAA,OAAO,EAAPA,OAAF;AAAWC,YAAAA,OAAO,EAAPA;AAAX,WAAxB;AADmB,SAAL;AAAA,OAAtB;AAGD;;;0CAEqBA,O,EAAS;AAC7B,WAAKC,OAAL,CAAa,UAAAC,SAAS,EAAI;AACxB,YAAIC,MAAM,GAAG,EAAb;AADwB;AAAA;AAAA;;AAAA;AAExB,+BAAcD,SAAS,CAACP,MAAxB,8HAAgC;AAA3BS,YAAAA,KAA2B;;AAC9B,gBAAIJ,OAAO,IAAII,KAAK,CAACJ,OAArB,EAA8B;AAC5BG,cAAAA,MAAM,CAACE,IAAP,CAAYD,KAAZ;AACD;AACF;AANuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAOxB,eAAO;AAAET,UAAAA,MAAM,EAAEQ;AAAV,SAAP;AACD,OARD;AASD;;;6BAEQ;AACP,aACE,oBAAC,WAAD;AAAa,QAAA,MAAM,EAAC,QAApB;AAA6B,QAAA,QAAQ,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE,oBAAC,KAAD;AAAO,QAAA,EAAE,EAAC,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAMD;;;;EAnCoBG,U;;AAsCvB,eAAed,QAAf;AACA","sourcesContent":["import React, { Component } from \"react\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nclass Username extends Componentm {\n  constructor(props) {\n    super(props);\n    this.state = {\n      errors: []\n    };\n    this.showValidarionErrors = this.showValidarionErrors.bind(this);\n    this.clearValidationErrors = this.showValidarionErrors.bind(this);\n  }\n\n  showValidarionErrors(element, message) {\n    this.setSate(prevState => ({\n      errors: [...prevState.errors, { element, message }]\n    }));\n  }\n\n  clearValidationErrors(message) {\n    this.setSate(prevState => {\n      let newArr = [];\n      for (error of prevState.errors) {\n        if (message != error.message) {\n          newArr.push(error);\n        }\n      }\n      return { errors: newArr };\n    });\n  }\n\n  render() {\n    return (\n      <FormControl margin=\"normal\" required>\n        <InputLabel>usertname</InputLabel>\n        <Input id=\"username\" />\n      </FormControl>\n    );\n  }\n}\n\nexport default Username;\n/*\nexport default props => (\n  <FormControl margin=\"normal\" required>\n    <InputLabel>usertname</InputLabel>\n    <Input id=\"username\" />\n  </FormControl>\n);*/\n"]},"metadata":{},"sourceType":"module"}