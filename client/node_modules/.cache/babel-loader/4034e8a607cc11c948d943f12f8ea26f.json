{"ast":null,"code":"import _toConsumableArray from \"/home/omeyer/Desktop/socialTech/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/home/omeyer/Desktop/socialTech/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/omeyer/Desktop/socialTech/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/omeyer/Desktop/socialTech/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/omeyer/Desktop/socialTech/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/omeyer/Desktop/socialTech/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/omeyer/Desktop/socialTech/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/omeyer/Desktop/socialTech/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/omeyer/Desktop/socialTech/client/src/components/content/Register.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { Paper, FormGroup } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport NewUser from \"./dialogs/NewUser\";\nimport { Firstname, Username, CompanyName, Lastname, Email, Password } from \"./formInputs\";\nimport ConfirmPassword from \"../content/formInputs/ConfirmPassword\";\nvar styles = {\n  registerPaper: {\n    padding: \"5% 15% 5% 15%\",\n    margin: \"10px 5px\",\n    overflow: \"auto\"\n  },\n  registerLabel: {}\n};\n\nvar Register =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Register, _Component);\n\n  function Register(props) {\n    var _this;\n\n    _classCallCheck(this, Register);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Register).call(this, props));\n\n    _this.handleChange = function (name) {\n      return function (event) {\n        _this.setState(_defineProperty({}, name, event.target.checked));\n\n        _this.handleClearError(\"firstname\");\n\n        _this.handleClearError(\"lastname\");\n\n        _this.handleClearError(\"username\");\n\n        _this.handleClearError(\"companyName\");\n\n        _this.handleClearError(\"email\");\n\n        _this.handleClearError(\"password\");\n\n        _this.handleClearError(\"confirmPassword\");\n\n        _this.clearInput();\n      };\n    };\n\n    _this.classes = props;\n    _this.state = {\n      checkedA: false,\n      firstname: \"\",\n      lastname: \"\",\n      companyName: \"\",\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      errors: []\n    };\n    _this.handleUsernameChange = _this.handleUsernameChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleEmailChange = _this.handleEmailChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handlePasswordChange = _this.handlePasswordChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleConfirmPasswordChange = _this.handleConfirmPasswordChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleFirstnameChange = _this.handleFirstnameChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleLastnameChange = _this.handleLastnameChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleCompanyNameChange = _this.handleCompanyNameChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleClearError = _this.handleClearError.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.clearInput = _this.clearInput.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Register, [{\n    key: \"clearInput\",\n    value: function clearInput() {\n      this.setState({\n        firstname: \"\"\n      });\n      this.setState({\n        lasstname: \"\"\n      });\n      this.setState({\n        username: \"\"\n      });\n      this.setState({\n        companyName: \"\"\n      });\n      this.setState({\n        email: \"\"\n      });\n      this.setState({\n        password: \"\"\n      });\n      this.setState({\n        confirmPassword: \"\"\n      });\n    }\n  }, {\n    key: \"handleUsernameChange\",\n    value: function handleUsernameChange(userInput) {\n      this.setState({\n        username: userInput\n      });\n    }\n  }, {\n    key: \"handleEmailChange\",\n    value: function handleEmailChange(userInput) {\n      this.setState({\n        email: userInput\n      });\n    }\n  }, {\n    key: \"handlePasswordChange\",\n    value: function handlePasswordChange(userInput) {\n      this.setState({\n        password: userInput\n      });\n    }\n  }, {\n    key: \"handleConfirmPasswordChange\",\n    value: function handleConfirmPasswordChange(userInput) {\n      this.setState({\n        confirmPassword: userInput\n      });\n    }\n  }, {\n    key: \"handleFirstnameChange\",\n    value: function handleFirstnameChange(userInput) {\n      this.setState({\n        firstname: userInput\n      });\n    }\n  }, {\n    key: \"handleLastnameChange\",\n    value: function handleLastnameChange(userInput) {\n      this.setState({\n        lastname: userInput\n      });\n    }\n  }, {\n    key: \"handleCompanyNameChange\",\n    value: function handleCompanyNameChange(userInput) {\n      this.setState({\n        companyName: userInput\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(element, message) {\n      this.setState(function (prevState) {\n        return {\n          errors: _toConsumableArray(prevState.errors).concat([{\n            element: element,\n            message: message\n          }])\n        };\n      });\n      this.clearInput();\n    }\n  }, {\n    key: \"handleClearError\",\n    value: function handleClearError(element) {\n      this.setState(function (prevState) {\n        var newArr = [];\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = prevState.errors[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var error = _step.value;\n\n            if (element !== error.element) {\n              newArr.push(error);\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        return {\n          errors: newArr\n        };\n      });\n    }\n  }, {\n    key: \"toggleLabel\",\n    value: function toggleLabel() {\n      return this.state.checkedA === false ? \"User\" : \"Company\";\n    }\n  }, {\n    key: \"userType\",\n    value: function userType() {\n      return this.state.checkedA === false ? React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(Firstname, {\n        parentState: this.state,\n        onFirstnameChange: this.handleFirstnameChange,\n        onClearErrorMsg: this.handleClearError,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }), React.createElement(Lastname, {\n        parentState: this.state,\n        onLastnameChange: this.handleLastnameChange,\n        onClearErrorMsg: this.handleClearError,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      })) : React.createElement(CompanyName, {\n        parentState: this.state,\n        onCompanyNameChange: this.handleCompanyNameChange,\n        onClearErrorMsg: this.handleClearError,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var classes = this.classes.classes;\n      return React.createElement(Paper, {\n        classes: {\n          root: classes.registerPaper\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(Username, {\n        parentState: this.state,\n        onUsernameChange: this.handleUsernameChange,\n        onClearErrorMsg: this.handleClearError,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }), React.createElement(Email, {\n        parentState: this.state,\n        onEmailChange: this.handleEmailChange,\n        onClearErrorMsg: this.handleClearError,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }), React.createElement(Password, {\n        parentState: this.state,\n        onPasswordChange: this.handlePasswordChange,\n        onClearErrorMsg: this.handleClearError,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }), React.createElement(ConfirmPassword, {\n        parentState: this.state,\n        onConfirmPasswordChange: this.handleConfirmPasswordChange,\n        onClearErrorMsg: this.handleClearError,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }), React.createElement(NewUser, {\n        parentState: this.state,\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Register;\n}(Component);\n\nRegister.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Register);","map":{"version":3,"sources":["/home/omeyer/Desktop/socialTech/client/src/components/content/Register.js"],"names":["React","Component","Fragment","Paper","FormGroup","PropTypes","withStyles","NewUser","Firstname","Username","CompanyName","Lastname","Email","Password","ConfirmPassword","styles","registerPaper","padding","margin","overflow","registerLabel","Register","props","handleChange","name","event","setState","target","checked","handleClearError","clearInput","classes","state","checkedA","firstname","lastname","companyName","username","email","password","confirmPassword","errors","handleUsernameChange","bind","handleEmailChange","handlePasswordChange","handleConfirmPasswordChange","handleFirstnameChange","handleLastnameChange","handleCompanyNameChange","handleSubmit","lasstname","userInput","element","message","prevState","newArr","error","push","root","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport { Paper, FormGroup } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport NewUser from \"./dialogs/NewUser\";\nimport {\n  Firstname,\n  Username,\n  CompanyName,\n  Lastname,\n  Email,\n  Password\n} from \"./formInputs\";\nimport ConfirmPassword from \"../content/formInputs/ConfirmPassword\";\n\nconst styles = {\n  registerPaper: {\n    padding: \"5% 15% 5% 15%\",\n    margin: \"10px 5px\",\n    overflow: \"auto\"\n  },\n  registerLabel: {}\n};\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n    this.classes = props;\n    this.state = {\n      checkedA: false,\n      firstname: \"\",\n      lastname: \"\",\n      companyName: \"\",\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      errors: []\n    };\n\n    this.handleUsernameChange = this.handleUsernameChange.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleConfirmPasswordChange = this.handleConfirmPasswordChange.bind(\n      this\n    );\n    this.handleFirstnameChange = this.handleFirstnameChange.bind(this);\n    this.handleLastnameChange = this.handleLastnameChange.bind(this);\n    this.handleCompanyNameChange = this.handleCompanyNameChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleClearError = this.handleClearError.bind(this);\n    this.clearInput = this.clearInput.bind(this);\n  }\n\n  clearInput() {\n    this.setState({ firstname: \"\" });\n    this.setState({ lasstname: \"\" });\n    this.setState({ username: \"\" });\n    this.setState({ companyName: \"\" });\n    this.setState({ email: \"\" });\n    this.setState({ password: \"\" });\n    this.setState({ confirmPassword: \"\" });\n  }\n\n  handleChange = name => event => {\n    this.setState({ [name]: event.target.checked });\n    this.handleClearError(\"firstname\");\n    this.handleClearError(\"lastname\");\n    this.handleClearError(\"username\");\n    this.handleClearError(\"companyName\");\n    this.handleClearError(\"email\");\n    this.handleClearError(\"password\");\n    this.handleClearError(\"confirmPassword\");\n    this.clearInput();\n  };\n\n  handleUsernameChange(userInput) {\n    this.setState({ username: userInput });\n  }\n\n  handleEmailChange(userInput) {\n    this.setState({ email: userInput });\n  }\n\n  handlePasswordChange(userInput) {\n    this.setState({ password: userInput });\n  }\n\n  handleConfirmPasswordChange(userInput) {\n    this.setState({ confirmPassword: userInput });\n  }\n\n  handleFirstnameChange(userInput) {\n    this.setState({ firstname: userInput });\n  }\n\n  handleLastnameChange(userInput) {\n    this.setState({ lastname: userInput });\n  }\n\n  handleCompanyNameChange(userInput) {\n    this.setState({ companyName: userInput });\n  }\n\n  handleSubmit(element, message) {\n    this.setState(prevState => ({\n      errors: [...prevState.errors, { element, message }]\n    }));\n\n    this.clearInput();\n  }\n\n  handleClearError(element) {\n    this.setState(prevState => {\n      let newArr = [];\n      for (let error of prevState.errors) {\n        if (element !== error.element) {\n          newArr.push(error);\n        }\n      }\n      return { errors: newArr };\n    });\n  }\n\n  toggleLabel() {\n    return this.state.checkedA === false ? \"User\" : \"Company\";\n  }\n\n  userType() {\n    return this.state.checkedA === false ? (\n      <Fragment>\n        <Firstname\n          parentState={this.state}\n          onFirstnameChange={this.handleFirstnameChange}\n          onClearErrorMsg={this.handleClearError}\n        />\n        <Lastname\n          parentState={this.state}\n          onLastnameChange={this.handleLastnameChange}\n          onClearErrorMsg={this.handleClearError}\n        />\n      </Fragment>\n    ) : (\n      <CompanyName\n        parentState={this.state}\n        onCompanyNameChange={this.handleCompanyNameChange}\n        onClearErrorMsg={this.handleClearError}\n      />\n    );\n  }\n\n  render() {\n    const { classes } = this.classes;\n\n    return (\n      <Paper classes={{ root: classes.registerPaper }}>\n        <FormGroup>\n          <Username\n            parentState={this.state}\n            onUsernameChange={this.handleUsernameChange}\n            onClearErrorMsg={this.handleClearError}\n          />\n          <Email\n            parentState={this.state}\n            onEmailChange={this.handleEmailChange}\n            onClearErrorMsg={this.handleClearError}\n          />\n          <Password\n            parentState={this.state}\n            onPasswordChange={this.handlePasswordChange}\n            onClearErrorMsg={this.handleClearError}\n          />\n          <ConfirmPassword\n            parentState={this.state}\n            onConfirmPasswordChange={this.handleConfirmPasswordChange}\n            onClearErrorMsg={this.handleClearError}\n          />\n          <NewUser parentState={this.state} onSubmit={this.handleSubmit} />\n        </FormGroup>\n      </Paper>\n    );\n  }\n}\n\nRegister.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(Register);\n"]},"metadata":{},"sourceType":"module"}