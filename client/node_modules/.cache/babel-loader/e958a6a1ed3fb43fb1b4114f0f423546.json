{"ast":null,"code":"import _classCallCheck from \"/home/omeyer/Desktop/socialTech/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/omeyer/Desktop/socialTech/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/omeyer/Desktop/socialTech/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/omeyer/Desktop/socialTech/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/omeyer/Desktop/socialTech/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/omeyer/Desktop/socialTech/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/omeyer/Desktop/socialTech/client/src/components/content/dialogs/NewUser.js\";\nimport React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from \"@material-ui/core\";\nimport validator from \"validator\";\nvar styles = {\n  registerButton: {\n    marginTop: \"20px\"\n  }\n};\n\nvar NewUser =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NewUser, _Component);\n\n  function NewUser(props) {\n    var _this;\n\n    _classCallCheck(this, NewUser);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NewUser).call(this, props));\n\n    _this.handleClickOpen = function () {\n      if (_this.validateUser() === true) {\n        _this.setState({\n          openDialog: true\n        });\n      }\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        openDialog: false\n      });\n    };\n\n    _this.classes = props;\n    _this.state = {\n      openDialog: false\n    };\n\n    var passwordValidator = require(\"password-validator\");\n\n    _this.passwordValidator = new passwordValidator();\n\n    _this.passwordValidator.is().min(8).is().max(100).has().uppercase().has().lowercase().has().digits().has().not().spaces().is().not().oneOf([\"Passw0rd\", \"Password123\"]);\n\n    _this.validateUser = _this.validateUser.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.clearValidationErrors = _this.clearValidationErrors.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.validateUser = _this.validateUser.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(NewUser, [{\n    key: \"clearValidationErrors\",\n    value: function clearValidationErrors(element) {\n      var newArr = [];\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.props.prevState.errors[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var error = _step.value;\n\n          if (element !== error.element) {\n            newArr.push(error);\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return {\n        errors: newArr\n      };\n    }\n  }, {\n    key: \"validateUser\",\n    value: function validateUser() {\n      var username = this.props.parentState.username;\n      var email = this.props.parentState.email;\n      var password = this.props.parentState.password;\n      var confirmPassword = this.props.parentState.confirmPassword;\n      var firstname = this.props.parentState.firstname;\n      var lastname = this.props.parentState.lastname;\n      var companyName = this.props.parentState.companyName;\n      var registrationValid = true;\n\n      if (username === \"\") {\n        this.props.onSubmit(\"username\", \"Field cannot be empty!\");\n        registrationValid = false;\n      }\n\n      if (email === \"\") {\n        this.props.onSubmit(\"email\", \"Field cannot be empty!\");\n        registrationValid = false;\n      } else if (validator.isEmail(email) === false) {\n        this.props.onSubmit(\"email\", \"Invalid email format!\");\n        registrationValid = false;\n      }\n\n      if (password === \"\") {\n        this.props.onSubmit(\"password\", \"Field cannot be empty!\");\n        registrationValid = false;\n      }\n\n      if (confirmPassword === \"\") {\n        this.props.onSubmit(\"confirmPassword\", \"Field cannot be empty!\");\n        registrationValid = false;\n      } else if (confirmPassword !== password) {\n        this.props.onSubmit(\"confirmPassword\", \"Passwords do not match\");\n        this.props.onSubmit(\"password\", \"Passwords do not match\");\n        registrationValid = false;\n      }\n\n      if (this.passwordValidator.validate(password) === false) {\n        this.props.onSubmit(\"password\", \"Invalid password! Password must be longer than 8 characters. Contain 1 Uppercase,1 Lowercase, 1 Digit and 1 Special Character \");\n        registrationValid = false;\n      }\n\n      if (firstname === \"\") {\n        this.props.onSubmit(\"firstname\", \"Field cannot be empty!\");\n        registrationValid = false;\n      }\n\n      if (lastname === \"\") {\n        this.props.onSubmit(\"lastname\", \"Field cannot be empty!\");\n        registrationValid = false;\n      }\n\n      if (companyName === \"\") {\n        this.props.onSubmit(\"companyName\", \"Field cannot be empty!\");\n        registrationValid = false;\n      }\n\n      return registrationValid;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var classes = this.classes.classes;\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: classes.registerButton,\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        onClick: this.handleClickOpen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \"Register\"), React.createElement(Dialog, {\n        open: this.state.openDialog,\n        onClose: this.handleClose,\n        \"aria-labelledby\": \"alert-dialog-title\",\n        \"aria-describedby\": \"alert-dialog-description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        id: \"alert-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \"Registration Succesfull\"), React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(DialogContentText, {\n        id: \"alert-dialog-description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, \"Thank you for joining us at S4A. Providing the tools you need to succeed.\")), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.handleClose,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, \"Continue\"))));\n    }\n  }]);\n\n  return NewUser;\n}(Component);\n\nNewUser.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(NewUser);","map":{"version":3,"sources":["/home/omeyer/Desktop/socialTech/client/src/components/content/dialogs/NewUser.js"],"names":["React","Component","Fragment","PropTypes","withStyles","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","validator","styles","registerButton","marginTop","NewUser","props","handleClickOpen","validateUser","setState","openDialog","handleClose","classes","state","passwordValidator","require","is","min","max","has","uppercase","lowercase","digits","not","spaces","oneOf","bind","clearValidationErrors","element","newArr","prevState","errors","error","push","username","parentState","email","password","confirmPassword","firstname","lastname","companyName","registrationValid","onSubmit","isEmail","validate","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle\n} from \"@material-ui/core\";\nimport validator from \"validator\";\n\nconst styles = {\n  registerButton: {\n    marginTop: \"20px\"\n  }\n};\n\nclass NewUser extends Component {\n  constructor(props) {\n    super(props);\n    this.classes = props;\n    this.state = {\n      openDialog: false\n    };\n    var passwordValidator = require(\"password-validator\");\n    this.passwordValidator = new passwordValidator();\n    this.passwordValidator\n      .is()\n      .min(8)\n      .is()\n      .max(100)\n      .has()\n      .uppercase()\n      .has()\n      .lowercase()\n      .has()\n      .digits()\n      .has()\n      .not()\n      .spaces()\n      .is()\n      .not()\n      .oneOf([\"Passw0rd\", \"Password123\"]);\n\n    this.validateUser = this.validateUser.bind(this);\n    this.clearValidationErrors = this.clearValidationErrors.bind(this);\n    this.validateUser = this.validateUser.bind(this);\n  }\n\n  handleClickOpen = () => {\n    if (this.validateUser() === true) {\n      this.setState({ openDialog: true });\n    }\n  };\n\n  handleClose = () => {\n    this.setState({ openDialog: false });\n  };\n\n  clearValidationErrors(element) {\n    let newArr = [];\n    for (let error of this.props.prevState.errors) {\n      if (element !== error.element) {\n        newArr.push(error);\n      }\n    }\n    return { errors: newArr };\n  }\n\n  validateUser() {\n    const username = this.props.parentState.username;\n    const email = this.props.parentState.email;\n    const password = this.props.parentState.password;\n    const confirmPassword = this.props.parentState.confirmPassword;\n    const firstname = this.props.parentState.firstname;\n    const lastname = this.props.parentState.lastname;\n    const companyName = this.props.parentState.companyName;\n\n    let registrationValid = true;\n    if (username === \"\") {\n      this.props.onSubmit(\"username\", \"Field cannot be empty!\");\n      registrationValid = false;\n    }\n    if (email === \"\") {\n      this.props.onSubmit(\"email\", \"Field cannot be empty!\");\n      registrationValid = false;\n    } else if (validator.isEmail(email) === false) {\n      this.props.onSubmit(\"email\", \"Invalid email format!\");\n      registrationValid = false;\n    }\n\n    if (password === \"\") {\n      this.props.onSubmit(\"password\", \"Field cannot be empty!\");\n      registrationValid = false;\n    }\n\n    if (confirmPassword === \"\") {\n      this.props.onSubmit(\"confirmPassword\", \"Field cannot be empty!\");\n      registrationValid = false;\n    } else if (confirmPassword !== password) {\n      this.props.onSubmit(\"confirmPassword\", \"Passwords do not match\");\n      this.props.onSubmit(\"password\", \"Passwords do not match\");\n      registrationValid = false;\n    }\n    if (this.passwordValidator.validate(password) === false) {\n      this.props.onSubmit(\n        \"password\",\n        \"Invalid password! Password must be longer than 8 characters. Contain 1 Uppercase,1 Lowercase, 1 Digit and 1 Special Character \"\n      );\n      registrationValid = false;\n    }\n\n    if (firstname === \"\") {\n      this.props.onSubmit(\"firstname\", \"Field cannot be empty!\");\n      registrationValid = false;\n    }\n    if (lastname === \"\") {\n      this.props.onSubmit(\"lastname\", \"Field cannot be empty!\");\n      registrationValid = false;\n    }\n    if (companyName === \"\") {\n      this.props.onSubmit(\"companyName\", \"Field cannot be empty!\");\n      registrationValid = false;\n    }\n    return registrationValid;\n  }\n\n  render() {\n    const { classes } = this.classes;\n    return (\n      <Fragment>\n        <Button\n          className={classes.registerButton}\n          variant=\"contained\"\n          color=\"primary\"\n          type=\"submit\"\n          onClick={this.handleClickOpen}\n        >\n          Register\n        </Button>\n        <Dialog\n          open={this.state.openDialog}\n          onClose={this.handleClose}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">\n            {\"Registration Succesfull\"}\n          </DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              Thank you for joining us at S4A. Providing the tools you need to\n              succeed.\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose} color=\"primary\">\n              Continue\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </Fragment>\n    );\n  }\n}\n\nNewUser.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(NewUser);\n"]},"metadata":{},"sourceType":"module"}