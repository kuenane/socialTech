{"ast":null,"code":"import _classCallCheck from \"/goinfre/omeyer/Desktop/socialTech/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/goinfre/omeyer/Desktop/socialTech/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/goinfre/omeyer/Desktop/socialTech/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/goinfre/omeyer/Desktop/socialTech/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/goinfre/omeyer/Desktop/socialTech/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/goinfre/omeyer/Desktop/socialTech/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/goinfre/omeyer/Desktop/socialTech/client/src/components/content/dialogs/NewUser.js\";\nimport React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from \"@material-ui/core\";\nimport validator from \"validator\";\nimport axios from \"axios\";\nvar styles = {\n  registerButton: {\n    marginTop: \"20px\"\n  }\n};\n\nvar NewUser =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NewUser, _Component);\n\n  function NewUser(props) {\n    var _this;\n\n    _classCallCheck(this, NewUser);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NewUser).call(this, props));\n\n    _this.handleClickOpen = function (event) {\n      event.preventDefault();\n\n      if (_this.validateUser() === true) {\n        var username = _this.props.parentState.username;\n        var email = _this.props.parentState.email;\n        var password = _this.props.parentState.password;\n\n        var _axios = require(\"axios\"); // Make a request for a user with a given ID\n\n\n        if (_this.checkDuplicateUser(email) === true) {\n          _this.props.onSubmit(\"email\", \"This email already exists in our database\");\n        } else {\n          _axios.post(\"/users/signup\", {\n            username: username,\n            email: email,\n            password: password\n          }).then(function (response) {\n            console.log(response);\n            console.log(response.data);\n          }).catch(function (error) {\n            console.log(error);\n          });\n\n          _this.setState({\n            openDialog: true\n          });\n        }\n      }\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        openDialog: false\n      });\n    };\n\n    _this.classes = props;\n    _this.state = {\n      openDialog: false,\n      response: \"\",\n      post: \"\",\n      responseToPost: \"\"\n    };\n\n    var passwordValidator = require(\"password-validator\");\n\n    _this.passwordValidator = new passwordValidator();\n\n    _this.passwordValidator.is().min(8).is().max(100).has().uppercase().has().lowercase().has().digits().has().not().spaces().is().not().oneOf([\"Passw0rd\", \"Password123\"]);\n\n    _this.validateUser = _this.validateUser.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.clearValidationErrors = _this.clearValidationErrors.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.validateUser = _this.validateUser.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.checkDuplicateUser = _this.checkDuplicateUser.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(NewUser, [{\n    key: \"checkDuplicateUser\",\n    value: function checkDuplicateUser(email) {\n      var users = [];\n      axios.get(\"/users\").then(function (response) {\n        users = response.data.users;\n        console.log(response);\n      }).catch(function (error) {\n        console.log(error);\n      });\n\n      for (var item in users) {\n        if (email === item) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n  }, {\n    key: \"clearValidationErrors\",\n    value: function clearValidationErrors(element) {\n      var newArr = [];\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.props.prevState.errors[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var error = _step.value;\n\n          if (element !== error.element) {\n            newArr.push(error);\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return {\n        errors: newArr\n      };\n    }\n  }, {\n    key: \"validateUser\",\n    value: function validateUser() {\n      var username = this.props.parentState.username;\n      var email = this.props.parentState.email;\n      var password = this.props.parentState.password;\n      var confirmPassword = this.props.parentState.confirmPassword;\n      var registrationValid = true;\n\n      if (username === \"\") {\n        this.props.onSubmit(\"username\", \"Field cannot be empty!\");\n        registrationValid = false;\n      }\n\n      if (email === \"\") {\n        this.props.onSubmit(\"email\", \"Field cannot be empty!\");\n        registrationValid = false;\n      } else if (validator.isEmail(email) === false) {\n        this.props.onSubmit(\"email\", \"Invalid email format!\");\n        registrationValid = false;\n      }\n\n      if (password === \"\") {\n        this.props.onSubmit(\"password\", \"Field cannot be empty!\");\n        registrationValid = false;\n      }\n\n      if (confirmPassword === \"\") {\n        this.props.onSubmit(\"confirmPassword\", \"Field cannot be empty!\");\n        registrationValid = false;\n      }\n\n      if (confirmPassword !== password) {\n        this.props.onSubmit(\"confirmPassword\", \"Passwords do not match\");\n        this.props.onSubmit(\"password\", \"Passwords do not match\");\n        registrationValid = false;\n      }\n\n      if (this.passwordValidator.validate(password) === false) {\n        this.props.onSubmit(\"password\", \"Invalid password! Password must be longer than 8 characters. Contain 1 Uppercase,1 Lowercase, 1 Digit and 1 Special Character \");\n        registrationValid = false;\n      }\n\n      return registrationValid;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var classes = this.classes.classes;\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: classes.registerButton,\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        onClick: this.handleClickOpen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, \"Register\"), React.createElement(Dialog, {\n        open: this.state.openDialog,\n        onClose: this.handleClose,\n        \"aria-labelledby\": \"alert-dialog-title\",\n        \"aria-describedby\": \"alert-dialog-description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        id: \"alert-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, \"Registration Succesfull\"), React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(DialogContentText, {\n        id: \"alert-dialog-description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, \"Thank you for joining us at S4A. Providing the tools you need to succeed.\")), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.handleClose,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, \"Continue\"))));\n    }\n  }]);\n\n  return NewUser;\n}(Component);\n\nNewUser.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(NewUser);","map":{"version":3,"sources":["/goinfre/omeyer/Desktop/socialTech/client/src/components/content/dialogs/NewUser.js"],"names":["React","Component","Fragment","PropTypes","withStyles","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","validator","axios","styles","registerButton","marginTop","NewUser","props","handleClickOpen","event","preventDefault","validateUser","username","parentState","email","password","require","checkDuplicateUser","onSubmit","post","then","response","console","log","data","catch","error","setState","openDialog","handleClose","classes","state","responseToPost","passwordValidator","is","min","max","has","uppercase","lowercase","digits","not","spaces","oneOf","bind","clearValidationErrors","users","get","item","element","newArr","prevState","errors","push","confirmPassword","registrationValid","isEmail","validate","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle\n} from \"@material-ui/core\";\nimport validator from \"validator\";\nimport axios from \"axios\";\n\nconst styles = {\n  registerButton: {\n    marginTop: \"20px\"\n  }\n};\n\nclass NewUser extends Component {\n  constructor(props) {\n    super(props);\n    this.classes = props;\n    this.state = {\n      openDialog: false,\n      response: \"\",\n      post: \"\",\n      responseToPost: \"\"\n    };\n\n    var passwordValidator = require(\"password-validator\");\n    this.passwordValidator = new passwordValidator();\n    this.passwordValidator\n      .is()\n      .min(8)\n      .is()\n      .max(100)\n      .has()\n      .uppercase()\n      .has()\n      .lowercase()\n      .has()\n      .digits()\n      .has()\n      .not()\n      .spaces()\n      .is()\n      .not()\n      .oneOf([\"Passw0rd\", \"Password123\"]);\n\n    this.validateUser = this.validateUser.bind(this);\n    this.clearValidationErrors = this.clearValidationErrors.bind(this);\n    this.validateUser = this.validateUser.bind(this);\n    this.checkDuplicateUser = this.checkDuplicateUser.bind(this);\n  }\n\n  checkDuplicateUser(email) {\n    var users = [];\n    axios\n      .get(\"/users\")\n      .then(function(response) {\n        users = response.data.users;\n        console.log(response);\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n    for (const item in users) {\n      if (email === item) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  handleClickOpen = event => {\n    event.preventDefault();\n    if (this.validateUser() === true) {\n      const username = this.props.parentState.username;\n      const email = this.props.parentState.email;\n      const password = this.props.parentState.password;\n      const axios = require(\"axios\");\n      // Make a request for a user with a given ID\n\n      if (this.checkDuplicateUser(email) === true) {\n        this.props.onSubmit(\n          \"email\",\n          \"This email already exists in our database\"\n        );\n      } else {\n        axios\n          .post(\"/users/signup\", {\n            username: username,\n            email: email,\n            password: password\n          })\n          .then(function(response) {\n            console.log(response);\n            console.log(response.data);\n          })\n          .catch(function(error) {\n            console.log(error);\n          });\n        this.setState({ openDialog: true });\n      }\n    }\n  };\n\n  handleClose = () => {\n    this.setState({ openDialog: false });\n  };\n\n  clearValidationErrors(element) {\n    let newArr = [];\n    for (let error of this.props.prevState.errors) {\n      if (element !== error.element) {\n        newArr.push(error);\n      }\n    }\n    return { errors: newArr };\n  }\n\n  validateUser() {\n    const username = this.props.parentState.username;\n    const email = this.props.parentState.email;\n    const password = this.props.parentState.password;\n    const confirmPassword = this.props.parentState.confirmPassword;\n\n    let registrationValid = true;\n    if (username === \"\") {\n      this.props.onSubmit(\"username\", \"Field cannot be empty!\");\n      registrationValid = false;\n    }\n    if (email === \"\") {\n      this.props.onSubmit(\"email\", \"Field cannot be empty!\");\n      registrationValid = false;\n    } else if (validator.isEmail(email) === false) {\n      this.props.onSubmit(\"email\", \"Invalid email format!\");\n      registrationValid = false;\n    }\n\n    if (password === \"\") {\n      this.props.onSubmit(\"password\", \"Field cannot be empty!\");\n      registrationValid = false;\n    }\n\n    if (confirmPassword === \"\") {\n      this.props.onSubmit(\"confirmPassword\", \"Field cannot be empty!\");\n      registrationValid = false;\n    }\n    if (confirmPassword !== password) {\n      this.props.onSubmit(\"confirmPassword\", \"Passwords do not match\");\n      this.props.onSubmit(\"password\", \"Passwords do not match\");\n      registrationValid = false;\n    }\n    if (this.passwordValidator.validate(password) === false) {\n      this.props.onSubmit(\n        \"password\",\n        \"Invalid password! Password must be longer than 8 characters. Contain 1 Uppercase,1 Lowercase, 1 Digit and 1 Special Character \"\n      );\n      registrationValid = false;\n    }\n\n    return registrationValid;\n  }\n\n  render() {\n    const { classes } = this.classes;\n\n    return (\n      <Fragment>\n        <Button\n          className={classes.registerButton}\n          variant=\"contained\"\n          color=\"primary\"\n          type=\"submit\"\n          onClick={this.handleClickOpen}\n        >\n          Register\n        </Button>\n        <Dialog\n          open={this.state.openDialog}\n          onClose={this.handleClose}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">\n            {\"Registration Succesfull\"}\n          </DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              Thank you for joining us at S4A. Providing the tools you need to\n              succeed.\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose} color=\"primary\">\n              Continue\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </Fragment>\n    );\n  }\n}\n\nNewUser.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(NewUser);\n"]},"metadata":{},"sourceType":"module"}