{"ast":null,"code":"import _toConsumableArray from \"/goinfre/omeyer/Desktop/socialTech/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/goinfre/omeyer/Desktop/socialTech/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/goinfre/omeyer/Desktop/socialTech/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/goinfre/omeyer/Desktop/socialTech/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/goinfre/omeyer/Desktop/socialTech/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/goinfre/omeyer/Desktop/socialTech/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/goinfre/omeyer/Desktop/socialTech/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/goinfre/omeyer/Desktop/socialTech/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/goinfre/omeyer/Desktop/socialTech/client/src/components/content/RightPane.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { Paper, Typography, FormGroup } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport NewUser from \"./dialogs/NewUser\";\nimport { Firstname, Username, CompanyName, Lastname, Email, Password } from \"./formInputs\";\nvar styles = {\n  registerPaper: {\n    padding: \"5% 15% 5% 15%\"\n  },\n  registerLabel: {}\n};\n\nvar RightPane =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(RightPane, _Component);\n\n  function RightPane(props) {\n    var _this;\n\n    _classCallCheck(this, RightPane);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RightPane).call(this, props));\n\n    _this.handleChange = function (name) {\n      return function (event) {\n        _this.setState(_defineProperty({}, name, event.target.checked));\n      };\n    };\n\n    _this.classes = props;\n    _this.state = {\n      checkedA: false,\n      firstname: \"\",\n      lastname: \"\",\n      companyName: \"\",\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      errors: [] //   validSubmission: true\n\n    };\n    _this.formValidation = _this.formValidation.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleUsernameChange = _this.handleUsernameChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleEmailChange = _this.handleEmailChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handlePasswordChange = _this.handlePasswordChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleFirstnameChange = _this.handleFirstnameChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleLastnameChange = _this.handleLastnameChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleCompanyNameChange = _this.handleCompanyNameChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleClearError = _this.handleClearError.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(RightPane, [{\n    key: \"handleUsernameChange\",\n    value: function handleUsernameChange(userInput) {\n      this.setState({\n        username: userInput\n      });\n    }\n  }, {\n    key: \"handleEmailChange\",\n    value: function handleEmailChange(userInput) {\n      this.setState({\n        email: userInput\n      });\n    }\n  }, {\n    key: \"handlePasswordChange\",\n    value: function handlePasswordChange(userInput) {\n      this.setState({\n        password: userInput\n      });\n    }\n  }, {\n    key: \"handleFirstnameChange\",\n    value: function handleFirstnameChange(userInput) {\n      this.setState({\n        firstname: userInput\n      });\n    }\n  }, {\n    key: \"handleLastnameChange\",\n    value: function handleLastnameChange(userInput) {\n      this.setState({\n        lastname: userInput\n      });\n    }\n  }, {\n    key: \"handleCompanyNameChange\",\n    value: function handleCompanyNameChange(userInput) {\n      this.setState({\n        companyName: userInput\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(element, message) {\n      this.setState(function (prevState) {\n        return {\n          errors: _toConsumableArray(prevState.errors).concat([{\n            element: element,\n            message: message\n          }])\n        };\n      });\n    }\n  }, {\n    key: \"handleClearError\",\n    value: function handleClearError(element) {\n      this.setState(function (prevState) {\n        var newArr = [];\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = prevState.errors[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var error = _step.value;\n\n            if (element !== error.element) {\n              newArr.push(error);\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        return {\n          errors: newArr\n        };\n      });\n    }\n  }, {\n    key: \"toggleLabel\",\n    value: function toggleLabel() {\n      return this.state.checkedA === false ? \"User\" : \"Company\";\n    }\n  }, {\n    key: \"userType\",\n    value: function userType() {\n      return this.state.checkedA === false ? React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(Firstname, {\n        firstname: this.state.firstname,\n        onFirstnameChange: this.handleFirstnameChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), React.createElement(Lastname, {\n        lastname: this.state.lastname,\n        onLastnameChange: this.handleLastnameChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      })) : React.createElement(CompanyName, {\n        companyName: this.state.companyName,\n        onCompanyNameChange: this.handleCompanyNameChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"formValidation\",\n    value: function formValidation() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var classes = this.classes.classes;\n      return React.createElement(Paper, {\n        classes: {\n          root: classes.registerPaper\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h2\",\n        gutterBottom: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"Registration\"), React.createElement(FormControlLabel, {\n        control: React.createElement(Switch, {\n          checked: this.state.checkedA,\n          onChange: this.handleChange(\"checkedA\"),\n          value: \"checkedB\",\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }),\n        label: this.toggleLabel(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }), this.userType(), React.createElement(Username, {\n        parentState: this.state,\n        onUsernameChange: this.handleUsernameChange,\n        onClearErrorMsg: this.handleClearError,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }), React.createElement(Email, {\n        parentState: this.state,\n        onEmailChange: this.handleEmailChange,\n        onClearErrorMsg: this.handleClearError,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }), React.createElement(Password, {\n        password: this.state.password,\n        onPasswordChange: this.handlePasswordChange,\n        onClearErrorMsg: this.handleClearError,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }), React.createElement(NewUser, {\n        parentState: this.state,\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return RightPane;\n}(Component);\n\nRightPane.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(RightPane);","map":{"version":3,"sources":["/goinfre/omeyer/Desktop/socialTech/client/src/components/content/RightPane.js"],"names":["React","Component","Fragment","Paper","Typography","FormGroup","PropTypes","withStyles","FormControlLabel","Switch","NewUser","Firstname","Username","CompanyName","Lastname","Email","Password","styles","registerPaper","padding","registerLabel","RightPane","props","handleChange","name","event","setState","target","checked","classes","state","checkedA","firstname","lastname","companyName","username","email","password","errors","formValidation","bind","handleUsernameChange","handleEmailChange","handlePasswordChange","handleFirstnameChange","handleLastnameChange","handleCompanyNameChange","handleSubmit","handleClearError","userInput","element","message","prevState","newArr","error","push","root","toggleLabel","userType","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport { Paper, Typography, FormGroup } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport NewUser from \"./dialogs/NewUser\";\nimport {\n  Firstname,\n  Username,\n  CompanyName,\n  Lastname,\n  Email,\n  Password\n} from \"./formInputs\";\n\nconst styles = {\n  registerPaper: {\n    padding: \"5% 15% 5% 15%\"\n  },\n  registerLabel: {}\n};\n\nclass RightPane extends Component {\n  constructor(props) {\n    super(props);\n    this.classes = props;\n    this.state = {\n      checkedA: false,\n      firstname: \"\",\n      lastname: \"\",\n      companyName: \"\",\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      errors: []\n      //   validSubmission: true\n    };\n    this.formValidation = this.formValidation.bind(this);\n    this.handleUsernameChange = this.handleUsernameChange.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleFirstnameChange = this.handleFirstnameChange.bind(this);\n    this.handleLastnameChange = this.handleLastnameChange.bind(this);\n    this.handleCompanyNameChange = this.handleCompanyNameChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleClearError = this.handleClearError.bind(this);\n  }\n\n  handleChange = name => event => {\n    this.setState({ [name]: event.target.checked });\n  };\n\n  handleUsernameChange(userInput) {\n    this.setState({ username: userInput });\n  }\n\n  handleEmailChange(userInput) {\n    this.setState({ email: userInput });\n  }\n\n  handlePasswordChange(userInput) {\n    this.setState({ password: userInput });\n  }\n\n  handleFirstnameChange(userInput) {\n    this.setState({ firstname: userInput });\n  }\n\n  handleLastnameChange(userInput) {\n    this.setState({ lastname: userInput });\n  }\n\n  handleCompanyNameChange(userInput) {\n    this.setState({ companyName: userInput });\n  }\n\n  handleSubmit(element, message) {\n    this.setState(prevState => ({\n      errors: [...prevState.errors, { element, message }]\n    }));\n  }\n\n  handleClearError(element) {\n    this.setState(prevState => {\n      let newArr = [];\n      for (let error of prevState.errors) {\n        if (element !== error.element) {\n          newArr.push(error);\n        }\n      }\n      return { errors: newArr };\n    });\n  }\n\n  toggleLabel() {\n    return this.state.checkedA === false ? \"User\" : \"Company\";\n  }\n\n  userType() {\n    return this.state.checkedA === false ? (\n      <Fragment>\n        <Firstname\n          firstname={this.state.firstname}\n          onFirstnameChange={this.handleFirstnameChange}\n        />\n        <Lastname\n          lastname={this.state.lastname}\n          onLastnameChange={this.handleLastnameChange}\n        />\n      </Fragment>\n    ) : (\n      <CompanyName\n        companyName={this.state.companyName}\n        onCompanyNameChange={this.handleCompanyNameChange}\n      />\n    );\n  }\n\n  formValidation() {}\n\n  render() {\n    const { classes } = this.classes;\n\n    return (\n      <Paper classes={{ root: classes.registerPaper }}>\n        <FormGroup>\n          <Typography variant=\"h2\" gutterBottom={true}>\n            Registration\n          </Typography>\n          <FormControlLabel\n            control={\n              <Switch\n                checked={this.state.checkedA}\n                onChange={this.handleChange(\"checkedA\")}\n                value=\"checkedB\"\n                color=\"primary\"\n              />\n            }\n            label={this.toggleLabel()}\n          />\n\n          {this.userType()}\n\n          <Username\n            parentState={this.state}\n            onUsernameChange={this.handleUsernameChange}\n            onClearErrorMsg={this.handleClearError}\n          />\n          <Email\n            parentState={this.state}\n            onEmailChange={this.handleEmailChange}\n            onClearErrorMsg={this.handleClearError}\n          />\n          <Password\n            password={this.state.password}\n            onPasswordChange={this.handlePasswordChange}\n            onClearErrorMsg={this.handleClearError}\n          />\n          <NewUser parentState={this.state} onSubmit={this.handleSubmit} />\n        </FormGroup>\n      </Paper>\n    );\n  }\n}\n\nRightPane.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(RightPane);\n"]},"metadata":{},"sourceType":"module"}